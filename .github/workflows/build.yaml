name: Build and Deploy to GitHub Pages

# Explicitly declare permissions
permissions:
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  BUILD_PATH: 'public'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # Cancel in progress runs if a new run is started


jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
      # cid: ${{ steps.deploy.outputs.cid }}
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: 'github-pages'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: '.node-version'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload artifact
        id: upload-artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' # only deploy to gh-pages for main branch
        id: deployment
        uses: actions/deploy-pages@v4
        

      # - uses: ipfs/ipfs-deploy-action@v1
      #   name: Deploy to IPFS
      #   id: deploy
      #   with:
      #     path-to-deploy: ${{ env.BUILD_PATH }}
      #     storacha-key: ${{ secrets.STORACHA_KEY }}
      #     storacha-proof: ${{ secrets.STORACHA_PROOF }}
      #     pinata-jwt-token: ${{ secrets.PINATA_JWT_TOKEN }}
      #     github-token: ${{ github.token }}

      # - name: Update DNSLink
      #   if: github.ref == 'refs/heads/main' # only update DNSLink for main branch
      #   uses: ipfs/dnslink-action@v0.1
      #   with:
      #     cid: ${{ steps.deploy.outputs.cid }}
      #     dnslink_domain: 'ipns.ipfs.network'
      #     cf_record_id: ${{ secrets.CF_IPNS_NETWORK_RECORD_ID }}
      #     cf_zone_id: ${{ secrets.CF_IPNS_NETWORK_ZONE_ID }}
      #     cf_auth_token: ${{ secrets.CF_IPNS_NETWORK_AUTH_TOKEN }}
      #     github_token: ${{ github.token }}
      #     set_github_status: true
